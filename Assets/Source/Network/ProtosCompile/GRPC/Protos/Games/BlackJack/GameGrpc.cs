// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/Games/BlackJack/Game.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace XddCards.Grpc.Games.BlackJack {
  public static partial class GameGrpc
  {
    static readonly string __ServiceName = "BlackJack.GameGrpc";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::XddCards.Grpc.Games.BlackJack.GameEndRequest> __Marshaller_BlackJack_GameEndRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::XddCards.Grpc.Games.BlackJack.GameEndRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::XddCards.Grpc.Games.BlackJack.GameEndReply> __Marshaller_BlackJack_GameEndReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::XddCards.Grpc.Games.BlackJack.GameEndReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::XddCards.Grpc.Games.BlackJack.OnDillerUpHiddenCardRequest> __Marshaller_BlackJack_OnDillerUpHiddenCardRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::XddCards.Grpc.Games.BlackJack.OnDillerUpHiddenCardRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::XddCards.Grpc.Games.BlackJack.OnDillerUpHiddenCardReply> __Marshaller_BlackJack_OnDillerUpHiddenCardReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::XddCards.Grpc.Games.BlackJack.OnDillerUpHiddenCardReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::XddCards.Grpc.Games.BlackJack.IsGameRequest> __Marshaller_BlackJack_IsGameRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::XddCards.Grpc.Games.BlackJack.IsGameRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::XddCards.Grpc.Games.BlackJack.IsGameReply> __Marshaller_BlackJack_IsGameReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::XddCards.Grpc.Games.BlackJack.IsGameReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::XddCards.Grpc.Games.BlackJack.InitRequest> __Marshaller_BlackJack_InitRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::XddCards.Grpc.Games.BlackJack.InitRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::XddCards.Grpc.Games.BlackJack.InitReply> __Marshaller_BlackJack_InitReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::XddCards.Grpc.Games.BlackJack.InitReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::XddCards.Grpc.Games.BlackJack.StartRequest> __Marshaller_BlackJack_StartRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::XddCards.Grpc.Games.BlackJack.StartRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::XddCards.Grpc.Games.BlackJack.StartReply> __Marshaller_BlackJack_StartReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::XddCards.Grpc.Games.BlackJack.StartReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::XddCards.Grpc.Games.BlackJack.OnCardAddRequest> __Marshaller_BlackJack_OnCardAddRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::XddCards.Grpc.Games.BlackJack.OnCardAddRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::XddCards.Grpc.Games.BlackJack.OnCardAddReply> __Marshaller_BlackJack_OnCardAddReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::XddCards.Grpc.Games.BlackJack.OnCardAddReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::XddCards.Grpc.Games.BlackJack.OnResultRequest> __Marshaller_BlackJack_OnResultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::XddCards.Grpc.Games.BlackJack.OnResultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::XddCards.Grpc.Games.BlackJack.OnResultReply> __Marshaller_BlackJack_OnResultReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::XddCards.Grpc.Games.BlackJack.OnResultReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::XddCards.Grpc.Games.BlackJack.PlayersRequest> __Marshaller_BlackJack_PlayersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::XddCards.Grpc.Games.BlackJack.PlayersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::XddCards.Grpc.Games.BlackJack.PlayersReply> __Marshaller_BlackJack_PlayersReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::XddCards.Grpc.Games.BlackJack.PlayersReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::XddCards.Grpc.Games.BlackJack.DealerRequest> __Marshaller_BlackJack_DealerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::XddCards.Grpc.Games.BlackJack.DealerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::XddCards.Grpc.Games.BlackJack.DealerReply> __Marshaller_BlackJack_DealerReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::XddCards.Grpc.Games.BlackJack.DealerReply.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::XddCards.Grpc.Games.BlackJack.GameEndRequest, global::XddCards.Grpc.Games.BlackJack.GameEndReply> __Method_OnGameEnd = new grpc::Method<global::XddCards.Grpc.Games.BlackJack.GameEndRequest, global::XddCards.Grpc.Games.BlackJack.GameEndReply>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "OnGameEnd",
        __Marshaller_BlackJack_GameEndRequest,
        __Marshaller_BlackJack_GameEndReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::XddCards.Grpc.Games.BlackJack.OnDillerUpHiddenCardRequest, global::XddCards.Grpc.Games.BlackJack.OnDillerUpHiddenCardReply> __Method_OnDillerUpHiddenCard = new grpc::Method<global::XddCards.Grpc.Games.BlackJack.OnDillerUpHiddenCardRequest, global::XddCards.Grpc.Games.BlackJack.OnDillerUpHiddenCardReply>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "OnDillerUpHiddenCard",
        __Marshaller_BlackJack_OnDillerUpHiddenCardRequest,
        __Marshaller_BlackJack_OnDillerUpHiddenCardReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::XddCards.Grpc.Games.BlackJack.IsGameRequest, global::XddCards.Grpc.Games.BlackJack.IsGameReply> __Method_IsGame = new grpc::Method<global::XddCards.Grpc.Games.BlackJack.IsGameRequest, global::XddCards.Grpc.Games.BlackJack.IsGameReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "IsGame",
        __Marshaller_BlackJack_IsGameRequest,
        __Marshaller_BlackJack_IsGameReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::XddCards.Grpc.Games.BlackJack.InitRequest, global::XddCards.Grpc.Games.BlackJack.InitReply> __Method_Init = new grpc::Method<global::XddCards.Grpc.Games.BlackJack.InitRequest, global::XddCards.Grpc.Games.BlackJack.InitReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Init",
        __Marshaller_BlackJack_InitRequest,
        __Marshaller_BlackJack_InitReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::XddCards.Grpc.Games.BlackJack.StartRequest, global::XddCards.Grpc.Games.BlackJack.StartReply> __Method_Start = new grpc::Method<global::XddCards.Grpc.Games.BlackJack.StartRequest, global::XddCards.Grpc.Games.BlackJack.StartReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Start",
        __Marshaller_BlackJack_StartRequest,
        __Marshaller_BlackJack_StartReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::XddCards.Grpc.Games.BlackJack.OnCardAddRequest, global::XddCards.Grpc.Games.BlackJack.OnCardAddReply> __Method_OnCardAdd = new grpc::Method<global::XddCards.Grpc.Games.BlackJack.OnCardAddRequest, global::XddCards.Grpc.Games.BlackJack.OnCardAddReply>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "OnCardAdd",
        __Marshaller_BlackJack_OnCardAddRequest,
        __Marshaller_BlackJack_OnCardAddReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::XddCards.Grpc.Games.BlackJack.OnResultRequest, global::XddCards.Grpc.Games.BlackJack.OnResultReply> __Method_OnResult = new grpc::Method<global::XddCards.Grpc.Games.BlackJack.OnResultRequest, global::XddCards.Grpc.Games.BlackJack.OnResultReply>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "OnResult",
        __Marshaller_BlackJack_OnResultRequest,
        __Marshaller_BlackJack_OnResultReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::XddCards.Grpc.Games.BlackJack.PlayersRequest, global::XddCards.Grpc.Games.BlackJack.PlayersReply> __Method_Players = new grpc::Method<global::XddCards.Grpc.Games.BlackJack.PlayersRequest, global::XddCards.Grpc.Games.BlackJack.PlayersReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Players",
        __Marshaller_BlackJack_PlayersRequest,
        __Marshaller_BlackJack_PlayersReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::XddCards.Grpc.Games.BlackJack.DealerRequest, global::XddCards.Grpc.Games.BlackJack.DealerReply> __Method_Dealer = new grpc::Method<global::XddCards.Grpc.Games.BlackJack.DealerRequest, global::XddCards.Grpc.Games.BlackJack.DealerReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Dealer",
        __Marshaller_BlackJack_DealerRequest,
        __Marshaller_BlackJack_DealerReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::XddCards.Grpc.Games.BlackJack.GameReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of GameGrpc</summary>
    [grpc::BindServiceMethod(typeof(GameGrpc), "BindService")]
    public abstract partial class GameGrpcBase
    {
      /// <summary>
      ///Game
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task OnGameEnd(global::XddCards.Grpc.Games.BlackJack.GameEndRequest request, grpc::IServerStreamWriter<global::XddCards.Grpc.Games.BlackJack.GameEndReply> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task OnDillerUpHiddenCard(global::XddCards.Grpc.Games.BlackJack.OnDillerUpHiddenCardRequest request, grpc::IServerStreamWriter<global::XddCards.Grpc.Games.BlackJack.OnDillerUpHiddenCardReply> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::XddCards.Grpc.Games.BlackJack.IsGameReply> IsGame(global::XddCards.Grpc.Games.BlackJack.IsGameRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::XddCards.Grpc.Games.BlackJack.InitReply> Init(global::XddCards.Grpc.Games.BlackJack.InitRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::XddCards.Grpc.Games.BlackJack.StartReply> Start(global::XddCards.Grpc.Games.BlackJack.StartRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///Players
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task OnCardAdd(global::XddCards.Grpc.Games.BlackJack.OnCardAddRequest request, grpc::IServerStreamWriter<global::XddCards.Grpc.Games.BlackJack.OnCardAddReply> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task OnResult(global::XddCards.Grpc.Games.BlackJack.OnResultRequest request, grpc::IServerStreamWriter<global::XddCards.Grpc.Games.BlackJack.OnResultReply> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::XddCards.Grpc.Games.BlackJack.PlayersReply> Players(global::XddCards.Grpc.Games.BlackJack.PlayersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::XddCards.Grpc.Games.BlackJack.DealerReply> Dealer(global::XddCards.Grpc.Games.BlackJack.DealerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for GameGrpc</summary>
    public partial class GameGrpcClient : grpc::ClientBase<GameGrpcClient>
    {
      /// <summary>Creates a new client for GameGrpc</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public GameGrpcClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for GameGrpc that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public GameGrpcClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected GameGrpcClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected GameGrpcClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///Game
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::XddCards.Grpc.Games.BlackJack.GameEndReply> OnGameEnd(global::XddCards.Grpc.Games.BlackJack.GameEndRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OnGameEnd(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Game
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::XddCards.Grpc.Games.BlackJack.GameEndReply> OnGameEnd(global::XddCards.Grpc.Games.BlackJack.GameEndRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_OnGameEnd, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::XddCards.Grpc.Games.BlackJack.OnDillerUpHiddenCardReply> OnDillerUpHiddenCard(global::XddCards.Grpc.Games.BlackJack.OnDillerUpHiddenCardRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OnDillerUpHiddenCard(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::XddCards.Grpc.Games.BlackJack.OnDillerUpHiddenCardReply> OnDillerUpHiddenCard(global::XddCards.Grpc.Games.BlackJack.OnDillerUpHiddenCardRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_OnDillerUpHiddenCard, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::XddCards.Grpc.Games.BlackJack.IsGameReply IsGame(global::XddCards.Grpc.Games.BlackJack.IsGameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IsGame(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::XddCards.Grpc.Games.BlackJack.IsGameReply IsGame(global::XddCards.Grpc.Games.BlackJack.IsGameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_IsGame, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::XddCards.Grpc.Games.BlackJack.IsGameReply> IsGameAsync(global::XddCards.Grpc.Games.BlackJack.IsGameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IsGameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::XddCards.Grpc.Games.BlackJack.IsGameReply> IsGameAsync(global::XddCards.Grpc.Games.BlackJack.IsGameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_IsGame, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::XddCards.Grpc.Games.BlackJack.InitReply Init(global::XddCards.Grpc.Games.BlackJack.InitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Init(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::XddCards.Grpc.Games.BlackJack.InitReply Init(global::XddCards.Grpc.Games.BlackJack.InitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Init, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::XddCards.Grpc.Games.BlackJack.InitReply> InitAsync(global::XddCards.Grpc.Games.BlackJack.InitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InitAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::XddCards.Grpc.Games.BlackJack.InitReply> InitAsync(global::XddCards.Grpc.Games.BlackJack.InitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Init, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::XddCards.Grpc.Games.BlackJack.StartReply Start(global::XddCards.Grpc.Games.BlackJack.StartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Start(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::XddCards.Grpc.Games.BlackJack.StartReply Start(global::XddCards.Grpc.Games.BlackJack.StartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Start, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::XddCards.Grpc.Games.BlackJack.StartReply> StartAsync(global::XddCards.Grpc.Games.BlackJack.StartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::XddCards.Grpc.Games.BlackJack.StartReply> StartAsync(global::XddCards.Grpc.Games.BlackJack.StartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Start, null, options, request);
      }
      /// <summary>
      ///Players
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::XddCards.Grpc.Games.BlackJack.OnCardAddReply> OnCardAdd(global::XddCards.Grpc.Games.BlackJack.OnCardAddRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OnCardAdd(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Players
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::XddCards.Grpc.Games.BlackJack.OnCardAddReply> OnCardAdd(global::XddCards.Grpc.Games.BlackJack.OnCardAddRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_OnCardAdd, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::XddCards.Grpc.Games.BlackJack.OnResultReply> OnResult(global::XddCards.Grpc.Games.BlackJack.OnResultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OnResult(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::XddCards.Grpc.Games.BlackJack.OnResultReply> OnResult(global::XddCards.Grpc.Games.BlackJack.OnResultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_OnResult, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::XddCards.Grpc.Games.BlackJack.PlayersReply Players(global::XddCards.Grpc.Games.BlackJack.PlayersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Players(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::XddCards.Grpc.Games.BlackJack.PlayersReply Players(global::XddCards.Grpc.Games.BlackJack.PlayersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Players, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::XddCards.Grpc.Games.BlackJack.PlayersReply> PlayersAsync(global::XddCards.Grpc.Games.BlackJack.PlayersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PlayersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::XddCards.Grpc.Games.BlackJack.PlayersReply> PlayersAsync(global::XddCards.Grpc.Games.BlackJack.PlayersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Players, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::XddCards.Grpc.Games.BlackJack.DealerReply Dealer(global::XddCards.Grpc.Games.BlackJack.DealerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Dealer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::XddCards.Grpc.Games.BlackJack.DealerReply Dealer(global::XddCards.Grpc.Games.BlackJack.DealerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Dealer, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::XddCards.Grpc.Games.BlackJack.DealerReply> DealerAsync(global::XddCards.Grpc.Games.BlackJack.DealerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DealerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::XddCards.Grpc.Games.BlackJack.DealerReply> DealerAsync(global::XddCards.Grpc.Games.BlackJack.DealerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Dealer, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override GameGrpcClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GameGrpcClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(GameGrpcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_OnGameEnd, serviceImpl.OnGameEnd)
          .AddMethod(__Method_OnDillerUpHiddenCard, serviceImpl.OnDillerUpHiddenCard)
          .AddMethod(__Method_IsGame, serviceImpl.IsGame)
          .AddMethod(__Method_Init, serviceImpl.Init)
          .AddMethod(__Method_Start, serviceImpl.Start)
          .AddMethod(__Method_OnCardAdd, serviceImpl.OnCardAdd)
          .AddMethod(__Method_OnResult, serviceImpl.OnResult)
          .AddMethod(__Method_Players, serviceImpl.Players)
          .AddMethod(__Method_Dealer, serviceImpl.Dealer).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, GameGrpcBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_OnGameEnd, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::XddCards.Grpc.Games.BlackJack.GameEndRequest, global::XddCards.Grpc.Games.BlackJack.GameEndReply>(serviceImpl.OnGameEnd));
      serviceBinder.AddMethod(__Method_OnDillerUpHiddenCard, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::XddCards.Grpc.Games.BlackJack.OnDillerUpHiddenCardRequest, global::XddCards.Grpc.Games.BlackJack.OnDillerUpHiddenCardReply>(serviceImpl.OnDillerUpHiddenCard));
      serviceBinder.AddMethod(__Method_IsGame, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::XddCards.Grpc.Games.BlackJack.IsGameRequest, global::XddCards.Grpc.Games.BlackJack.IsGameReply>(serviceImpl.IsGame));
      serviceBinder.AddMethod(__Method_Init, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::XddCards.Grpc.Games.BlackJack.InitRequest, global::XddCards.Grpc.Games.BlackJack.InitReply>(serviceImpl.Init));
      serviceBinder.AddMethod(__Method_Start, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::XddCards.Grpc.Games.BlackJack.StartRequest, global::XddCards.Grpc.Games.BlackJack.StartReply>(serviceImpl.Start));
      serviceBinder.AddMethod(__Method_OnCardAdd, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::XddCards.Grpc.Games.BlackJack.OnCardAddRequest, global::XddCards.Grpc.Games.BlackJack.OnCardAddReply>(serviceImpl.OnCardAdd));
      serviceBinder.AddMethod(__Method_OnResult, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::XddCards.Grpc.Games.BlackJack.OnResultRequest, global::XddCards.Grpc.Games.BlackJack.OnResultReply>(serviceImpl.OnResult));
      serviceBinder.AddMethod(__Method_Players, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::XddCards.Grpc.Games.BlackJack.PlayersRequest, global::XddCards.Grpc.Games.BlackJack.PlayersReply>(serviceImpl.Players));
      serviceBinder.AddMethod(__Method_Dealer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::XddCards.Grpc.Games.BlackJack.DealerRequest, global::XddCards.Grpc.Games.BlackJack.DealerReply>(serviceImpl.Dealer));
    }

  }
}
#endregion
